{% comment %}
{% endcomment %}

{% liquid 
    assign block_id = block.id 
    assign tw_usp_text = block.settings.tw_usp_text 
    assign tw_usp_icon_svg = block.settings.tw_usp_icon_svg 
    assign tw_usp_icon_svg = block.settings.tw_usp_icon_svg_2 
    assign tw_usp_page_content = block.settings.tw_usp_page_content
    
    assign count_usp = count_usp
    assign cursor_auto = cursor_auto

    if tw_usp_page_content != blank 
        capture cursor_auto
            echo 'cursor-auto'
        endcapture 
    endif
%}

<div class="usp-block  !nf-m-0">
    {% assign count_usp = count_usp | plus: 1 %}
    <div id="usp_product__item-{{count_usp}}" class="nf-flex nf-relative nf-items-center usp_product__item " block-id="{{ block.id }}" count_usp="{{count_usp}}">
        {%- if tw_usp_icon_svg -%}
            <span class=" first:nf-contents [&>svg]:nf-max-w-[20px] [&>svg]:nf-h-[20px] [&>svg]:nf-w-full [&>svg]:nf-fill-[#80807E]">{{ tw_usp_icon_svg }}</span>
        {%- endif -%}
        <span id="showDialog-{{ block.id }}" class="nf-flex {{- cursor_auto -}}">
            <span class="nf-ml-[10px]" style="font-size: {{usp_product_font_size}}px;">{{ tw_usp_text }}</span>
            {%- if tw_usp_icon_svg_2 -%}
                <span class="nf-ml-[10px]">{{ tw_usp_icon_svg_2 }}</span>   
            {%- endif -%}
        </span>
    </div> 
</div>



<style>
    .localization-dialog {
        padding: 2rem;
        border-radius: 8px;
        border: none;
        box-shadow: 0 0 10px rgba(0,0,0,0.3);
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
        max-width: 50rem;
        width: 90%;
        overflow: unset;
    }

    .localization-dialog::backdrop {
        background: rgba(0, 0, 0, 0.6);
        opacity: 0;
        transition: opacity 0.3s ease-in-out;
    }

    .localization-dialog.localization-fade-in {
        opacity: 1;
    }

    .localization-dialog.localization-fade-in::backdrop {
        opacity: 1;
    }

    .localization-fade-out {
        opacity: 0 !important;
    }

    .localization-dialog.localization-fade-out::backdrop {
        opacity: 0 !important;
    }


    .localization-close-button {
        display: inline-block;
        padding: 0;
        min-width: 2.4rem;
        min-height: 1.4rem;
        box-shadow: 0 0 0 .2rem rgba(var(--color-button), 0);
        position: absolute;
        top: 15px;
        right: 15px;
        color: rgb(var(--color-foreground));
        background-color: transparent;
        border: none;
        cursor: pointer;
    }


</style>

<script>

    const localizationDialog = document.getElementById('localization-dialog');

    function openLocalizationDialog() {
        // First, set all focusable elements to tabindex -1
        const focusableElements = localizationDialog.querySelectorAll('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
        const originalTabIndexes = new Map();

        focusableElements.forEach(el => {
            originalTabIndexes.set(el, el.getAttribute('tabindex'));
            el.setAttribute('tabindex', '-1');
        });

        localizationDialog.showModal();

        // Set dialog's tabindex to -1 and focus it instead of its contents
        localizationDialog.setAttribute('tabindex', '-1');
        localizationDialog.focus();

        // Restore original tabindexes after animation frame
        requestAnimationFrame(() => {
                focusableElements.forEach(el => {
                    const originalTabIndex = originalTabIndexes.get(el);
                    if (originalTabIndex === null) {
                        el.removeAttribute('tabindex');
                    } else {
                        el.setAttribute('tabindex', originalTabIndex);
                    }
                });
                
                requestAnimationFrame(() => {
                    localizationDialog.classList.add('localization-fade-in');
                });
            });
        }

        function closeLocalizationDialog() {
            localizationDialog.classList.remove('localization-fade-in');
            localizationDialog.classList.add('localization-fade-out');
            localizationDialog.addEventListener('transitionend', () => {
                localizationDialog.close();
                localizationDialog.classList.remove('localization-fade-out');
                localizationDialog.removeAttribute('tabindex');
            }, { once: true });
        }

        // Close dialog when clicking outside
        localizationDialog.addEventListener('click', (e) => {
            const dialogDimensions = localizationDialog.getBoundingClientRect();
            if (
                e.clientX < dialogDimensions.left ||
                e.clientX > dialogDimensions.right ||
                e.clientY < dialogDimensions.top ||
                e.clientY > dialogDimensions.bottom
            ) {
                closeLocalizationDialog();
            }
        });

        // Handle ESC key
        localizationDialog.addEventListener('cancel', (e) => {
            e.preventDefault();
            closeLocalizationDialog();
        });

        // Prevent any focusin events when dialog opens
        localizationDialog.addEventListener('focusin', (e) => {
            if (!localizationDialog.classList.contains('localization-fade-in')) {
                e.preventDefault();
                localizationDialog.focus();
            }
        });

</script>


<dialog id="localization-dialog" class="localization-dialog">

    Content

    <button class="localization-button localization-close-button" onclick="closeLocalizationDialog()">
        <svg
        xmlns="http://www.w3.org/2000/svg"
        aria-hidden="true"
        focusable="false"
        class="icon icon-close"
        fill="none"
        viewBox="0 0 18 17"
        >
        <path d="M.865 15.978a.5.5 0 00.707.707l7.433-7.431 7.579 7.282a.501.501 0 00.846-.37.5.5 0 00-.153-.351L9.712 8.546l7.417-7.416a.5.5 0 10-.707-.708L8.991 7.853 1.413.573a.5.5 0 10-.693.72l7.563 7.268-7.418 7.417z" fill="currentColor">
        </svg>
    </button>
</dialog>