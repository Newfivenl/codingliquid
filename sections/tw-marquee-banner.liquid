{%- comment -%}

Instructions:

1. Add this file to your sections folder

{% endcomment %}
{%- style -%}

  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }
  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  @keyframes marquee {
    0% { transform: translateX(0); }
    100% { transform: translateX(-50%); }
  }

{%- endstyle -%}

{% assign text_items = section.blocks | where: 'type', 'text' %}

<section class="section-{{ section.id }}-padding gradient color-{{ section.settings.section_color_scheme }}">
  <div class="tw-flex tw-w-screen tw-max-w-full tw-justify-end tw-overflow-hidden">
    <div id="marquee" class="tw-flex tw-overflow-hidden tw-w-full">
      <div class="marquee-content tw-flex tw-w-[200%]">
        {%- for block in text_items -%}
          <div class="tw-flex tw-gap-[5px] tw-flex-none tw-w-1/4 max-md:tw-w-fit tw-justify-center tw-items-center tw-p-4 tw-text-lg tw-font-bold">
            {% if block.settings.icon != blank %}
              {{ block.settings.icon | image_url: width: 20 | image_tag:
                loading: 'lazy',
                class: ''
              }}
            {% endif %}
            {% if block.settings.text != blank %}
              <span style="font-size: {{ block.settings.text_size }}px;">{{ block.settings.text }}</span>
            {% endif %}
          </div>
        {%- endfor -%}
        {%- for block in text_items -%}
          <div class="tw-flex tw-gap-[5px] tw-flex-none tw-w-1/4  max-md:tw-w-fit tw-justify-center tw-items-center tw-p-4 tw-text-lg tw-font-bold">
            {% if block.settings.icon != blank %}
              {{ block.settings.icon | image_url: width: 20 | image_tag:
                loading: 'lazy',
                class: ''
              }}
            {% endif %}
            {% if block.settings.text != blank %}
              <span style="font-size: {{ block.settings.text_size }}px;">{{ block.settings.text }}</span>
            {% endif %}
          </div>
        {%- endfor -%}
      </div>
    </div>
  </div>
</section>

<script>
  // Wait for DOM to be fully loaded before initializing the marquee
  document.addEventListener("DOMContentLoaded", function () {
    // Get reference to main marquee container, exit if not found
    const marquee = document.getElementById('marquee');
    if (!marquee) return; // Error handling
    
    // Get reference to the content that will scroll, exit if not found
    const marqueeContent = marquee.querySelector('.marquee-content');
    if (!marqueeContent) return;
    
    // Initialize speed with validation to prevent negative values
    // Speed value is injected from framework settings
    let speed = Math.max(0, {{ section.settings.speed }}); 
    let pos = 0; // Tracks the current position of the marquee
    let animationFrame; // Stores the animation frame ID for cleanup
    
    /**
     * Main animation function that moves the marquee content
     * Uses requestAnimationFrame for smooth performance
     * Resets position when content is halfway through for infinite scroll effect
     */
    function startMarquee() {
        pos -= speed; // Move content left by subtracting speed
        // Reset position when content has scrolled halfway
        if (pos <= -marqueeContent.scrollWidth / 2) {
            pos = 0;
        }
        // Apply transform for smooth hardware-accelerated animation
        marqueeContent.style.transform = `translateX(${pos}px)`;
        // Request next frame and store ID for potential cancellation
        animationFrame = requestAnimationFrame(startMarquee);
    }
    
    /**
     * Pauses the marquee by setting speed to 0
     * Used for both mouse hover and touch events
     */
    function pauseMarquee() {
        speed = 0;
    }
    
    /**
     * Resumes the marquee by restoring original speed
     * Used for both mouse out and touch end events
     */
    function resumeMarquee() {
        speed = {{ section.settings.speed }};
    }
    
    /**
     * Handles visibility changes when user switches tabs
     * Stops animation when tab is hidden to save resources
     * Resumes animation when tab becomes visible again
     */
    document.addEventListener('visibilitychange', () => {
        if (document.hidden) {
            // Cancel animation when tab is not visible
            cancelAnimationFrame(animationFrame);
        } else {
            // Restart animation when tab becomes visible
            startMarquee();
        }
    });
    
    // Add mouse event listeners for desktop interaction
    marquee.addEventListener('mouseover', pauseMarquee);
    marquee.addEventListener('mouseout', resumeMarquee);
    
    // Add touch event listeners for mobile interaction
    marquee.addEventListener('touchstart', pauseMarquee);
    marquee.addEventListener('touchend', resumeMarquee);
    
    // Initialize the marquee animation
    startMarquee();
  });
</script>


{% schema %}
{
    "name": "TW - Marquee banner",
    "settings": [
        {
          "type":"range",
          "id":"speed",
          "label":"Marquee speed",
          "min":0.1,
          "max":5,
          "step":0.1,
          "default":0.5
        },
        {
          "type": "color_scheme",
          "id": "section_color_scheme",
          "label": "Color scheme",
          "default": "scheme-1"
        },
        {
          "type": "range",
          "id": "padding_top",
          "min": 0,
          "max": 100,
          "step": 4,
          "unit": "px",
          "label": "Padding top",
          "default": 12
        },
        {
          "type": "range",
          "id": "padding_bottom",
          "min": 0,
          "max": 100,
          "step": 4,
          "unit": "px",
          "label": "Padding bottom",
          "default": 12
        }
    ],
    "blocks": [
      {
        "type": "text",
        "name": "Text",
        "settings": [
          {
            "type": "text",
            "id": "text",
            "label": "Text",
            "default": "NEWFIVE"
          },
          {
            "type": "range",
            "id": "text_size",
            "label": "Text size",
            "min": 12,
            "max": 36,
            "step": 1,
            "unit": "px",
            "default": 12
          },
          {
            "type": "image_picker",
            "id": "icon",
            "label": "Icon"
          }
        ]
      }
    ],
    "presets": [
        {
          "name": "TW - Marquee banner",
          "blocks": [
            {
              "type": "text"
            },
            {
              "type": "text"
            },
            {
              "type": "text"
            },
            {
              "type": "text"
            }
          ]
        }
    ]
}
{% endschema %}