{% comment %}

Metaobject name: Shop the look
Metaobject description: This shop the look is designed for shopify page. It allows you to add a list of products with a main image and a description.

Metobject type: shop_the_look
Metaobject fields:
- Name model
  name: Name model
  type: single line text
- Description
  name: Description
  type: richtext
- Main image:
  name: Main image
  type: file(image only)
- Product list
  name: Product list
  type: product_list

The metafield will be setup on the page level.
Metafield name: shop_the_look
Meatafield type: meataobject
Select the shop the look metaobject

{% endcomment %}

{{ 'component-card.css' | asset_url | stylesheet_tag }}

{%- style -%}

@keyframes slide-up {
  from {
    transform: translateY(100%);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slide-down {
  from {
    transform: translateY(0);
    opacity: 1;
  }
  to {
    transform: translateY(100%);
    opacity: 0;
  }
}

.animate-slide-up {
  animation: slide-up 0.5s ease-out forwards;
}

.animate-slide-down {
  animation: slide-down 0.5s ease-out forwards;
}


{%- endstyle -%}

{% if page.metafields.custom.shop_the_look != blank %}

    {% liquid 
        assign fetch_priority = 'auto'
        if section.index == 1
            assign fetch_priority = 'high'
        endif
        assign widths = '375, 550, 750, 1100, 1500, 1780, 2000, 3000, 3840'
        assign image_class = ''
    %}

    {%- capture sizes -%}
        (min-width: {{ settings.page_width }}px) {{ settings.page_width | minus: 100 | divided_by: 2 }}px,
        (min-width: 750px) calc((100vw - 130px) / 2), calc((100vw - 50px) / 2)
    {%- endcapture -%}


    
    <div class="shop-the-look-items tw-px-[5rem] tw-py-[5rem] max-[640px]:tw-px-[2rem] max-[640px]:tw-py-[2rem]">
        <div class="product-grid-container">
            <div class="">
                <ul id="product-grid" data-id="{{ section.id }}" class="grid product-grid grid--2-col-tablet-down grid--4-col-desktop">
                    {% for block in section.blocks %}
                        <li class="tw-relative tw-group grid__item max-[640px]:!tw-w-full max-[640px]:tw-max-w-[100%]" data-index="{{ forloop.index }}">
                            <div class="tw-absolute tw-w-full tw-h-full tw-flex tw-items-center tw-justify-center tw-cursor-pointer min-[990px]:tw-opacity-0 min-[990px]:tw-bg-white/60 tw-transition-all tw-duration-300 min-[990px]:group-hover:tw-opacity-100 min-[990px]:group-hover:tw-backdrop-blur-sm max-[989px]:tw-flex max-[989px]:tw-flex-col max-[989px]:tw-justify-end">
                                <span class="max-[989px]:tw-hidden"> {{ block.settings.name_model }} </span>
                                <button onclick="toggleSlider()" class="tw-uppercase tw-bg-white tw-rounded-md tw-overflow-hidden tw-py-4 tw-px-5 tw-leading-[11px] tw-hidden max-[989px]:tw-block max-[989px]:tw-mb-[20px]">Shop the look</button>
                            </div>
                            {{ block.settings.main_image | image_url: width: 1500 | image_tag: class: "tw-cursor-pointer image_class", sizes: sizes, widths: widths, fetchpriority: fetch_priority }}
                        </li>
                    {% endfor %}
                </ul>
            </div>
        </div>
    </div>
    
    {% for block in section.blocks %}
        {% assign shop_the_look_products = section.blocks | where: 'type', 'shop-the-look-product' %}
        <div class="shop-the-look-contents tw-hidden" data-index="{{ forloop.index }}">
            <div class="">
                <button class="shop-the-look-back tw-p-[10px] tw-m-[20px] tw-relative tw-text-black tw-group">
                    VIEW ALL LOOKS
                    <span class="tw-absolute tw-w-full tw-h-[2px] tw-bg-black tw-left-0 tw-bottom-0 tw-transform tw-scale-x-0 tw-transition tw-duration-300 tw-group-hover:tw-scale-x-100"></span>
                </button>
                <div class="tw-grid tw-grid-cols-2 tw-gap-4">
                    <div class="">
                        {{ block.settings.main_image | image_url: width: 3000 | image_tag: class: "tw-cursor-pointer image_class", sizes: sizes, widths: widths, fetchpriority: fetch_priority }}
                    </div>
                    <div class="">

                        <div class="tw-grid tw-grid-cols-2 tw-gap-4 tw-h-full tw-content-center lg:tw-w-3/4 lg:tw-mx-auto">
                            {% for product in block.settings.product_list %}
                                <div class="tw-cursor-pointer">
                                    {% render 'card-product',
                                    card_product: product,
                                    media_aspect_ratio: 'adapt',
                                    image_shape: 'default',
                                    show_secondary_image: true,
                                    show_vendor: false,
                                    show_rating: false,
                                    skip_styles: false,
                                    section_id: section.id,
                                    quick_add: false 
                                    %}
                                </div>
                            {% endfor %}
                        </div>

                    </div>
                </div>
            </div>               
        </div> 
    {% endfor %}
    
    <div class="shop-the-look-contents-mobile">
        {% assign mobile_products = section.blocks | where: 'type', 'shop-the-look-product' %}
        {% for product in mobile_products %}
            <div class="tw-cursor-pointer">
                {% render 'card-product',
                card_product: product,
                media_aspect_ratio: 'adapt',
                image_shape: 'default',
                show_secondary_image: true,
                show_vendor: false,
                show_rating: false,
                skip_styles: false,
                section_id: section.id,
                quick_add: false 
                %}
            </div>
        {% endfor %}
    </div>
    
{% endif %}

<script>
    document.addEventListener('DOMContentLoaded', () => {
        
        if (window.matchMedia("(min-width: 640px)").matches) {
            const shopTheLookItemsContainer = document.querySelector('.shop-the-look-items');
            const lookItems = document.querySelectorAll('#product-grid .grid__item');
            const shopTheLookContents = document.querySelectorAll('.shop-the-look-contents');

            lookItems.forEach(item => {
                item.addEventListener('click', () => {
                    const index = item.getAttribute('data-index');
                    const relatedContent = document.querySelector(`.shop-the-look-contents[data-index="${index}"]`);
                    if (relatedContent) {
                        relatedContent.classList.remove('tw-hidden');
                        shopTheLookItemsContainer.classList.add('tw-hidden');
                        lookItems.forEach(li => li.classList.add('tw-hidden'));
                    }
                    const relatedBackButton = relatedContent.querySelector('.shop-the-look-back');
                    if (relatedBackButton) {
                        relatedBackButton.addEventListener('click', () => {
                        relatedContent.classList.add('tw-hidden');
                        shopTheLookItemsContainer.classList.remove('tw-hidden');
                        lookItems.forEach(item => item.classList.remove('tw-hidden'));
                        console.log(`Back button clicked for item: ${index}`);
                        }, { once: true });
                    }
                });
            });
        }


    });

    function toggleSlider() {
        const slider = document.getElementById('slider');

        if (slider.classList.contains('hidden')) {
            // Show and animate up
            slider.classList.remove('hidden', 'animate-slide-down');
            slider.classList.add('animate-slide-up');
        } else {
            // Animate down and then hide on animation end
            slider.classList.remove('animate-slide-up');
            slider.classList.add('animate-slide-down');
        slider.addEventListener('animationend', function handleAnimationEnd() {
                if (slider.classList.contains('animate-slide-down')) {
                slider.classList.add('hidden');
                slider.classList.remove('animate-slide-down');
                }
                slider.removeEventListener('animationend', handleAnimationEnd);
            });
        }
    }

</script>




{% schema %}
{
    "name": "Shop the Look",
    "settings": [
    ],
    "blocks": [
        {
        "type": "shop-the-look-product",
        "name": "Shop the look",
            "settings": [
                {
                    "type": "text",
                    "id": "name_model",
                    "label": "Model name"
                },
                {
                    "type": "richtext",
                    "id": "description",
                    "label": "Description"
                },
                {
                    "type": "image_picker",
                    "id": "main_image",
                    "label": "Main image"
                },
                {
                    "type": "product_list",
                    "id": "product_list",
                    "label": "Product list"
                }
            ]
        }
    ],
    "presets": [
        {
            "name": "Shop the Look"
        }
    ]
}
{% endschema %}